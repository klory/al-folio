<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-08-09T15:34:25+00:00</updated><id>/feed.xml</id><title type="html">Fangda HAN</title><subtitle>Fangda's personal website
</subtitle><entry><title type="html">T test</title><link href="/blog/2022/t-test/" rel="alternate" type="text/html" title="T test" /><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><id>/blog/2022/t-test</id><content type="html" xml:base="/blog/2022/t-test/"><![CDATA[<h1 id="use-case">Use case</h1>

<p>Determine if our guess/prediction/hypothesis is significant.</p>

<h2 id="examples">Examples</h2>

<p>One-sample t-test:</p>

<ul>
  <li>
    <p>[<a href="https://www.probabilitycourse.com/chapter8/8_4_4_p_vals.php">Toss coin</a> expl] If we toss a coin 100 times with 60 heads, can we trust it to be a fair coin?</p>
  </li>
  <li>
    <p>[<a href="https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.stats.pearsonr.html">Pearson</a> expl] Given two sequence x (feature) and y (label), we can compute <a href="https://en.wikipedia.org/wiki/Pearson_correlation_coefficient">Pearson correlation</a> r. Assume r is high (e.g., 0.8), how do we trust this result, what if both sequences are actually randomly sampled and this is just a coincidence? In other words, how to know if this result is <strong>significantly</strong> different compared with “assuming x and y are randomly sampled”? How <strong>confident</strong> are we about the result?</p>
  </li>
</ul>

<p>Two-independent-sample t-test:</p>

<ul>
  <li>[<a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.ttest_ind_from_stats.html">Two independent sample mean</a> expl] We are given two sequence a and b which may be sampled from the same one-dimensional random variable. E.g., we get 13 samples in a~[1, 3, 4, 6, 11, 13, 15, 19, 22, 24, 25, 26, 26] and 11 samples in b~[2, 4, 6, 9, 11, 13, 14, 15, 18, 19, 21], can we trust their means are actually the same?</li>
</ul>

<h1 id="moving-to-t-distribution">Moving to t-distribution</h1>

<ul>
  <li>Know population mean</li>
  <li><del>Know population std</del></li>
</ul>

<p>Intuitively, we are saying when we can not get population std, we use sample std instead.</p>

\[t = \frac{\bar{X}-\mu}{S/\sqrt{n}}\]

<ul>
  <li>\(\bar{X}\): sample mean</li>
  <li>\(\mu\): population mean</li>
  <li>\(S\): sample std</li>
  <li>\(n\): sample size</li>
  <li>\(t\): t score</li>
</ul>

<p>But since we replaced the population std with sample std, t score is not a standard normal distribution anymore, it now follows the <a href="https://en.wikipedia.org/wiki/Student%27s_t-distribution#In_frequentist_statistical_inference">student’s t-distribution</a>. The reason for this is beyond the scope of this post, but anyway, student’s t distribution is very much like Gaussian distribution, but only need one parameter (degree of freedom) instead of two in Gaussian (mean and std).</p>

<p><img src="/assets/img/2022-07-29-t-test/t-distribution.jpg" alt="From Wikipedia" /></p>

<p>As you can see, student’s t distribution is defined by some complicate function called <a href="https://en.wikipedia.org/wiki/Gamma_function">gamma function</a>, which is beyound the scope of this post. But scipy in Python has already prepare <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.t.html">this</a> for us. Similar to z-test, we care about the cumulative distribution function (cdf) output, which tells us how like the event score will happen.</p>

<p>So in real world, all we need to do is</p>

<ol>
  <li>Know population mean beforehand.</li>
  <li>Do the experiment, collect sample size, sample mean, and sample std.</li>
  <li>Compute t score</li>
  <li>Compute cdf output (<a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.t.html">scipy.stats.t.cdf</a> or just look up it in the <a href="https://www.sjsu.edu/faculty/gerstman/StatPrimer/t-table.pdf">t-table</a>)</li>
</ol>

<p>The rest is the same as z-test, so I will conclude the post here.</p>

<h2 id="lets-try-some-examples">Let’s try some examples</h2>

<blockquote>
  <p>[Patient recovery expl] Researcher thinks that if knee surgery patients go to physical therapy twice a week (instead of 3 times), their recovery period will be longer. Average recovery times for knee surgery patients is 8.2 weeks, experiemnt result on 40 patients shows the average is 8.3 weeks and std is 0.5 weeks.</p>
</blockquote>

<p>Here, the accepted fact is \(\mu=8.2\), researcher hypothesizes “\(\mu&gt;8.2\) when therapy twick a week”. So the null hypothesis is “\(\mu=8.2\) when therapy twice a week”. In other words, twice a week has no effect, the patients still only need 8.2 weeks to recover. And we are computing under the null hypothesis, how likely (probability) the result (8.3 weeks over 40 patients) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 8.2</li>
      <li>pupulation std = ?</li>
      <li>sample size = 40</li>
      <li>sample mean = 8.3</li>
      <li>sample std = 0.5</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>do NOT know population std =&gt; T-test</p>

\[t = \frac{8.3-8.2}{0.5/\sqrt{40}} = 1.26\]

<p>Compute the p-value, we need also know degree of freedom, in this case, it will be 40-1=39, because we know sample mean, so not all 40 points are free, only 39 are free.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">1</span> <span class="o">-</span> <span class="n">scipy</span><span class="p">.</span><span class="n">stats</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="n">cdf</span><span class="p">(</span><span class="mf">1.26</span><span class="p">,</span> <span class="mi">39</span><span class="p">)</span> <span class="c1"># or scipy.stats.t.sf(1.26. 39)
# output: 0.1076
</span></code></pre></div></div>

<p>So if we pre-selected alpha=0.05, p&gt;alpha, we are at least 95% sure to accept the null hypothesis, in other words, the result is NOT significant.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Use case]]></summary></entry><entry><title type="html">Z test</title><link href="/blog/2022/z-test/" rel="alternate" type="text/html" title="Z test" /><published>2022-07-29T00:00:00+00:00</published><updated>2022-07-29T00:00:00+00:00</updated><id>/blog/2022/z-test</id><content type="html" xml:base="/blog/2022/z-test/"><![CDATA[<h1 id="use-case">Use case</h1>

<p>One sample usage: Estimate how many <a href="https://en.wikipedia.org/wiki/Standard_deviation">standard deviation</a> (std) the sample mean is from the <strong>population</strong> mean.</p>

<p><strong>population</strong>: all/entire data.</p>

<blockquote>
  <p>[John’s score expl] Given mean and std of course score of the entire class, now estimate how good is John’s course score.</p>
</blockquote>

<hr />

<p>Sample mean usage (much more common): If the sample mean is far away enough from the population mean, then we say the sample mean is <em>significantly</em> different from population mean.</p>

<blockquote>
  <p>[IQ expl] A principal at a certain school claims that the students in his school are above average intelligence. A random sample of thirty students IQ scores have a mean score of 112.5. Is there sufficient evidence to support the principal’s claim? The mean population IQ is 100 with a standard deviation of 15.</p>
</blockquote>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 100</li>
      <li>population std = 15</li>
      <li>sample size = 30</li>
      <li>sample mean = 112.5</li>
      <li>sample std = ?</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; Z-test</p>

<h1 id="limitations">Limitations</h1>

<ul>
  <li>Know population mean</li>
  <li>Know populatino std</li>
  <li>Population has at least 30 samples (why?)</li>
</ul>

<h1 id="methodology">Methodology</h1>

\[Z = \frac{\bar{x}-\mu}{\sigma/\sqrt{n}}\]

<ul>
  <li>\(\bar{x}\): sample mean</li>
  <li>\(\mu\): population mean</li>
  <li>\(\sigma\): population std</li>
  <li>\(n\): sample size</li>
  <li>\(z\): z score.</li>
</ul>

<p>Note \(\sigma/\sqrt{n}\) is actually the std of the sample mean (not sample std, <a href="https://math.stackexchange.com/a/857863/538623">why</a>). Z score has a standard normal distribution, and when n==1, this simplifies to:</p>

\[Z = \frac{x-\mu}{\sigma}\]

<h1 id="z-test-in-one-sample-case">Z-test in one-sample case</h1>

<blockquote>
  <p>[John’s score expl]</p>
</blockquote>

<p>If we have 40 students taken the final, and course score mean is 75, std is 14, while John got 84, we can compute the z score as</p>

\[z = \frac{84-75}{14} = 0.64\]

<p><strong>Here 0.64 means John’s score is 0.64*std higher (because 0.64 is positive) than the mean</strong>.</p>

<p>But 0.64*std is not that intuitive to understand, better way is telling me that John is better than x% of students in the class, and this is where z-table can help.</p>

<h1 id="z-table">Z-table</h1>

<p><a href="http://www.z-table.com/">Z table</a> uses z score as input and outputs  the percentage just as we want in the previous section (area under curve).</p>

<p>In the example above, by reading the z score table, we know John is better than 0.7389 (73.89%) students in the class (population).</p>

<p><img src="/assets/img/2022-07-28-z-score/z_score_table.jpg" alt="z-table" /></p>

<p>Note we don’t need to know the number of samples in the population in order to use z-table.</p>

<h1 id="where-does-z-table-come-from">Where does z-table come from?</h1>
<p>The answer is it is from <a href="https://en.wikipedia.org/wiki/Normal_distribution">Gaussian distribution</a>. According to <a href="https://sphweb.bumc.bu.edu/otlt/mph-modules/bs/bs704_probability/BS704_Probability12.html#:~:text=The%20central%20limit%20theorem%20states,will%20be%20approximately%20normally%20distributed.">Cental Limite Thereom</a>, if the population is large enough (e.g., more than 30), roughly, the (mean of) course score will follow gaussian distribution, so basically, we are now treating the course score distribution a Gaussian distribution.</p>

\[\frac{1}{\sigma \sqrt{2\pi}} e^{-\frac{(x-\mu)^2}{2\sigma^2}}\]

<p>And the CDF (cumulative density function) is:</p>

\[\frac{1}{2}[1+erf(\frac{x-\mu}{\sigma\sqrt{2}})]\]

<p>Because when we compute z score we already normalized our input (John’s score), we can just use $\mu=0$ and $\mu=1$, the CDF becomes standard:</p>

\[\frac{1}{2}[1+erf(\frac{x}{\sqrt{2}})]\]

<p>Now if we set $x=0.64$, we get</p>

\[\frac{1}{2}[1+erf(\frac{0.64}{\sqrt{2}})] = 0.7389\]

<p>This matches the number in z score table.</p>

<h1 id="z-test-in-sample-mean-case">Z-test in sample mean case</h1>

<blockquote>
  <p>The above [IQ expl]</p>
</blockquote>

<p>Population mean \(\mu_0=100\), population std \(\sigma_0=18\), experiment result mean \(\mu = 108\), experiment sample size \(n=30\).</p>

<p>According to z-score equation, we know the z-score is</p>

\[Z = \frac{\bar{x}-\mu}{\sigma/\sqrt{n}}\]

\[Z = \frac{108 - 100}{18 / \sqrt{30}} = 2.43\]

<p>This tells the sample mean is \(2.43\sigma_0\) away from the population mean \(\mu_0\), if you look up z-table, you will know the corresponding area under curve is more than 99.25%.</p>

<p><img src="/assets/img/2022-07-28-z-score/z=2.43.jpg" alt="" /></p>

<p>Well, how do we interprete this 99.25%? Intuitively, this tells us</p>

<ul>
  <li>Under the null hypothesis, such a result is very unlikely to happen (so far away from the mean). Or,</li>
  <li>Our sample mean is very unlikely to see natually (under the null hypothesis). Or,</li>
  <li>The result <strong>rejects the null hypothesis</strong>. Or,</li>
  <li>The principal is very likely to be correct, student here indeed have higher IQ (assume the princpal is not cherry-picking clever students from his/her school)</li>
</ul>

<p>Here, we introduce another concept “reject null hypothesis”, and this is actually all we want to do, we do experiments, design models to find something new, something <strong>significantly</strong> different from “accepted fact”, don’t we?</p>

<p>But statistics/math do not like “very likely” or “significantly”, we want to define it more accurately, so now we will interprete the result from another perspective to more accurately express our result as “we are xx% (confidence level) sure about the result is correct”.</p>

<h1 id="confidence-level-alpha-significance-level-p-value-and-confidence-interval">Confidence level, Alpha (Significance level), P-value, and Confidence Interval</h1>
<p>(I don’t know why people invented so many concepts, while actually they are all saying the same thing)</p>

<h2 id="confidence-level">Confidence level</h2>

<p>In the [IQ expl], the confidence level (area under curve (AUC)) is 99.25%, it means we are 99.25% sure to reject the null hypotehsis</p>

<h2 id="alpha">Alpha</h2>

<p>Alpha is the pre-selected threshold we use to reject the null hypothesis.</p>

<p>In real-world scenerio,</p>

<ol>
  <li>Pre-select an alpha value (say 0.05) before the experiment,</li>
  <li>Find the z-score corresponding to the alpha value (I know, believe me I don’t like this part either), in this case we find the \(z_{\alpha=0.05} = 1.645\),</li>
  <li>Do the experiment, and get our \(z=2.43\),</li>
  <li>\(z &gt; z_{\alpha=0.05}\), it means <strong>we are at least 95% confident that the null hypothesis is wrong</strong>, so we reject null hypothesis, the result is significant.</li>
</ol>

<h2 id="p-value">P-value</h2>

<p>In the [IQ expl], the confidence level is 99.25%, then p-value would be:</p>

\[p = 1 - AUC = 0.0075\]

<p>So what is the different between alpha and p-value? Well, they are the same thing, it is just alpha is the pre-selected target, and p-value is the actual result.</p>

<p>In real-world, we often:</p>

<ol>
  <li>Pre-select an alpha value (say \(z_{\alpha}\) 0.05) before the experiment,</li>
  <li>Do the experiment, and get our \(z=2.43\),</li>
  <li>Check the z-score vs. p-value table, find the p-value \(p=0.007539\),</li>
  <li>\(p &lt; \alpha\), it means <strong>the null hypothesis is very unlikely to happen</strong>, so we reject null hypothesis, the result is significant.</li>
</ol>

<h2 id="confidence-interval-ci">Confidence Interval (CI)</h2>

<p>To compute CI, we need population mean, population std, and sample size, and a pre-selected alpha (or confidence level),</p>

<p>In the [IQ expl], assume we pick alpha=0.05, which correpondes to z=1.96 then the confidence interval is:</p>

\[left = \mu_0 + (\sigma_0/\sqrt(n)) * 1.96 = 100 + (15/\sqrt{30}) * 1.96 = 105.37\]

\[right = +\infty\]

<p>Which tells us if we want to have at least 95% certainty with current sample size, then our sample mean should lies with \((105.37, \infty)\), our result 108 is in the range, so we can have at least 95% certainty to reject the null hypothesis.</p>

<h1 id="one-more-example-before-we-continue">One more example before we continue</h1>
<blockquote>
  <p>[Blood glucose expl] Blood glucose levels for obese patients have a mean of 100 with a standard deviation of 15. A researcher thinks that a diet high in raw cornstarch will have <strong>a positive or negative</strong> effect on blood glucose levels. A sample of 30 patients who have tried the raw cornstarch diet have a mean glucose level of 102.</p>
</blockquote>

<p>Here, the accepted fact is “\(\mu=100\)”, the researcher hypothesizes “\(\mu&lt;100\) or \(\mu&gt;100\) with cornstarch”, so the null hypothesis is “\(\mu=100\) with cornstarch”. And we are computing under the null hypothesis, how likely (probability) the result (\(\mu&gt;=102\) or \(\mu&lt;=98\) over 30 patients, <a href="#oneside_vs_twoside">why?</a>) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 100</li>
      <li>population std = 15</li>
      <li>sample size = 30</li>
      <li>sample mean = 102</li>
      <li>sample std = ?</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; Z-test</p>

<p>\(\mu_0=100\), \(\sigma_0=15\), \(n=30\), \(\mu=140\).</p>

\[z = \frac{102 - 100}{15 / \sqrt{30}} = 0.73\]

<p>Looking up in z-score vs. p-value, \(p=0.46539\), so if we choose \(\alpha=0.05\), \(p \gt \alpha\), <strong>the null hypothesis is likely to happen</strong> (very likely in this case), in other words, the result is not significant.</p>

<h2 id="larger-sample-size-is-always-better">Larger sample size is always better</h2>
<p>But if our sample size is 200, then z=1.88, and p=0.06, which is very close to the target 0.05, intuitively, we are more certain about our result (the sample mean) when we have more samples. This suggests us when we do experiment, we need at least a certain sample size to make sure our result is trustworthy, and the more, the better.</p>

<h2 id="one-side-vs-two-side">One-side vs Two-side</h2>

<p>Note when you look up in the z-score vs. p-value table, it will let you choose “one-side” or “two-side”, what is it?</p>

<p>Actually, in [Blood glucose expl], if you put z=0.73 in the standard Gaussian distribution cdf</p>

\[cdf(z)=\frac{1}{2}[1+erf(\frac{z}{\sqrt{2}})]\]

<p>you will get <code class="language-plaintext highlighter-rouge">cdf(0.73) = 0.7673</code>, which means <code class="language-plaintext highlighter-rouge">p= 1-0.7673 = 0.2327</code>, but this is only one-side p-value, it means</p>

<blockquote>
  <p>If we randomly choose 30 people (no matter they eat cornstarch or not), we have 23.27% to get a mean blood glucose to be \(\mu_{sample}&gt;=102\).</p>
</blockquote>

<p>However, this is not what we want in the [Blood glucose expl], “a diet high in raw cornstarch will have <strong>a positive or negative effect</strong> on blood glucose levels.” This is telling us we need the two-side p-value, which means</p>

<blockquote>
  <p>When we see a result (sample mean) = 102, we should interprete it as the blood glucose level should be between 98 and 102, \(98&lt;=\mu_{sample}&lt;=102\). Here 98 is computed from</p>
</blockquote>

\[\mu_0 - (102-\mu_0) = 100 - (102-100) = 98\]

<p>This means we are looking at a harder problem (more difficult to reject the null hypothesis):</p>

<p><img src="/assets/img/2022-07-29-t-test/one-side-vs-two-side.jpeg" alt="one-side hypothesis vs two-side hypothesis" /></p>

<p>The red area is the probability (p-value) that the result (sample mean) will happen under null hypothesis. We see the probability (p-value) in the two-side case is doubled.</p>

<p>So the p-valud in the [blood glucose expl] is <code class="language-plaintext highlighter-rouge">2 * one-side = 2 * 0.2327 = 0.4654</code>, and since we set our alpha (target value) to be 0.05, \(0.4654 &gt;&gt; 0.05\), we still have a loooong way to go.</p>

<h1 id="what-if-population-std-is-unknown">What if population std is UNKNOWN?</h1>

<p>In reality, even a distribution is Gaussian like, often it’s hard to know population std (population mean is usually easier to acquire/guess, <span style="color: red;">why?</span>), in such cases (i.e., gaussian-like distribution, know population mean, UNKNOWN population std), we would refer to another distribution (student t distribution), which I’ll leave it for the next post.</p>

<h1 id="references">References</h1>

<ul>
  <li>https://www.wallstreetmojo.com/z-score-formula/</li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Use case]]></summary></entry><entry><title type="html">How to transform epub with images to pdf using Python</title><link href="/blog/2022/how-to-transform-epub-to-pdf-with-Python/" rel="alternate" type="text/html" title="How to transform epub with images to pdf using Python" /><published>2022-07-28T00:00:00+00:00</published><updated>2022-07-28T00:00:00+00:00</updated><id>/blog/2022/how-to-transform-epub-to-pdf-with-Python</id><content type="html" xml:base="/blog/2022/how-to-transform-epub-to-pdf-with-Python/"><![CDATA[<h2 id="why-i-do-it">Why I do it</h2>

<p>I use iPhone and iPad to read mangas every now and then, but sometimes Epub format can be annoying, either they can not be opened on iPhone or they have some blank pages in between. Changing to PDF can solve most of the problem it seems.</p>

<h2 id="how-to-do-it-in-python">How to do it in Python</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">ebooklib</span>
<span class="kn">from</span> <span class="nn">ebooklib</span> <span class="kn">import</span> <span class="n">epub</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<span class="kn">import</span> <span class="nn">io</span>

<span class="n">fname</span> <span class="o">=</span> <span class="sa">f</span><span class="s">'dragon_ball_1.epub'</span>
<span class="n">book</span> <span class="o">=</span> <span class="n">epub</span><span class="p">.</span><span class="n">read_epub</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span>

<span class="n">images</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">image</span> <span class="ow">in</span> <span class="n">book</span><span class="p">.</span><span class="n">get_items_of_type</span><span class="p">(</span><span class="n">ebooklib</span><span class="p">.</span><span class="n">ITEM_IMAGE</span><span class="p">):</span>
    <span class="n">image</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">io</span><span class="p">.</span><span class="n">BytesIO</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">content</span><span class="p">))</span>
    <span class="n">images</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>

<span class="n">pdf_path</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"dragon_ball_1.pdf"</span> 
<span class="n">images</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">save</span><span class="p">(</span>
    <span class="n">pdf_path</span><span class="p">,</span> <span class="s">"PDF"</span> <span class="p">,</span><span class="n">resolution</span><span class="o">=</span><span class="mf">100.0</span><span class="p">,</span> <span class="n">save_all</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">append_images</span><span class="o">=</span><span class="n">images</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
<span class="p">)</span>
</code></pre></div></div>

<p>It takes less than 3 minutes to transform a 172MB epub file with 1256 pages on my 2019 MBP16.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Epub to PDF]]></summary></entry><entry><title type="html">Hypothesis test</title><link href="/blog/2022/hypothesis-test/" rel="alternate" type="text/html" title="Hypothesis test" /><published>2022-07-28T00:00:00+00:00</published><updated>2022-07-28T00:00:00+00:00</updated><id>/blog/2022/hypothesis-test</id><content type="html" xml:base="/blog/2022/hypothesis-test/"><![CDATA[<p>From <a href="https://www.statisticshowto.com/probability-and-statistics/hypothesis-testing/">here</a>: Hypothesis testing in statistics is a way for you to test the results of a survey or experiment to see if you have meaningful results. You’re basically testing whether your results are valid by figuring out the odds that your results have happened by chance. If your results may have happened by chance, the experiment won’t be repeatable and so has little use.</p>

<h1 id="null-hypothesis">Null Hypothesis</h1>
<p>From <a href="https://www.statisticshowto.com/probability-and-statistics/hypothesis-testing/">here</a> again: The null hypothesis is always the accepted fact.</p>

<h1 id="state-a-null-hypothesis">State a Null Hypothesis</h1>
<p>This is a little tricky, you make a hypothesis based on experiment result, stating a null hypothesis means “assuming your result still follows the accepted fact”, let’s try <a href="https://www.statisticshowto.com/probability-and-statistics/hypothesis-testing/">some exercises</a>:</p>

<blockquote>
  <p>[IQ expl] A principal at a certain school claims that the students in his school are above average intelligence. A random sample of thirty students IQ scores have a mean score of 112.5. Is there sufficient evidence to support the principal’s claim? The mean population IQ is 100 with a standard deviation of 15.</p>
</blockquote>

<p>Here, the accepted fact is “IQ=100”, the principle hypothesizes “IQ&gt;100 in his school”, so the null hypothesis is “IQ=100 in his school”. And we are computing under the null hypothesis, how likely (probability) the result (IQ=112.5 over 30 students) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 100</li>
      <li>population std = 15</li>
      <li>sample size = 30</li>
      <li>sample mean = 112.5</li>
      <li>sample std = ?</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; Z-test</p>

<hr />

<blockquote>
  <p>[Blood glucose expl] Blood glucose levels for obese patients have a mean of 100 with a standard deviation of 15. A researcher thinks that a diet high in raw cornstarch will have <strong>a positive or negative</strong> effect on blood glucose levels. A sample of 30 patients who have tried the raw cornstarch diet have a mean glucose level of 102.</p>
</blockquote>

<p>Here, the accepted fact is “\(\mu=100\)”, the researcher hypothesizes “\(\mu&lt;100\) or \(\mu&gt;100\) with cornstarch”, so the null hypothesis is “\(\mu=100\) with cornstarch”. And we are computing under the null hypothesis, how likely (probability) the result (\(\mu&gt;=102\) or \(\mu&lt;=98\) over 30 patients, <a href="#oneside_vs_twoside">why?</a>) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 100</li>
      <li>population std = 15</li>
      <li>sample size = 30</li>
      <li>sample mean = 102</li>
      <li>sample std = ?</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; Z-test</p>

<hr />

<blockquote>
  <p>[Patient recovery expl] Researcher thinks that if knee surgery patients go to physical therapy twice a week (instead of 3 times), their recovery period will be longer. Average recovery times for knee surgery patients is 8.2 weeks, experiemnt result on 40 patients shows the average is 8.3 weeks and std is 0.5 weeks.</p>
</blockquote>

<p>Here, the accepted fact is \(\mu=8.2\), researcher hypothesizes “\(\mu&gt;8.2\) when therapy twick a week”. So the null hypothesis is “\(\mu=8.2\) when therapy twice a week”. In other words, twice a week has no effect, the patients still only need 8.2 weeks to recover. And we are computing under the null hypothesis, how likely (probability) the result (8.3 weeks over 40 patients) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 8.2</li>
      <li>pupulation std = ?</li>
      <li>sample size = 40</li>
      <li>sample mean = 8.3</li>
      <li>sample std = 0.5</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>do NOT know population std =&gt; T-test</p>

<hr />

<p>Now let’s try more:</p>

<blockquote>
  <p>[<a href="https://www.probabilitycourse.com/chapter8/8_4_4_p_vals.php">Toss coin expl</a> expl] If we toss a coin 100 times with 60 heads, can we trust it to be a fair coin?</p>
</blockquote>

<p>Here, the accepted fact is “coin is fair”, the computed result hypothesizes “This coin is not fair with P(head)=0.6”, so the null hypothesis is “This coin is fair”. And we are computing under the null hypothesis, how likely (probability) the result (\(P(head)=0.6\)) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = np = 100 * 0.5 = 50</li>
      <li>population std = \(\sqrt{np(1-p)} = \sqrt{100 * 0.5 * 0.5} = 5\)</li>
      <li>sample size = 100</li>
      <li>sample mean = 60</li>
      <li>sample std = \(\sqrt{100 * 0.6 * 0.4} \approx 4.9\)</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; Z-test</p>

<hr />

<blockquote>
  <p>[<a href="https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.stats.pearsonr.html">Pearson expl</a> expl] Given two sequence x (feature) and y (label), we can compute <a href="https://en.wikipedia.org/wiki/Pearson_correlation_coefficient">Pearson correlation</a> r. Assume r is high (e.g., 0.8), how do we trust this result, what if both sequences are actually randomly sampled and this is just a coincidence? In other words, how to know if this result is <strong>significantly</strong> different compared with “assuming x and y are randomly sampled”? How <strong>confident</strong> are we about the result?</p>
</blockquote>

<p>Here, the accepted fact is “if data are randomly sampled, they should have no correlation, in other words, the pearson correlation coeeficient should be \(r_0=0\)”, the computed result hypothesizes “This {x,y} have correlation \(r_{x,y}=x\)”, so the null hypothesis is “This {x,y} have no correlation”. And we are computing under the null hypothesis, how likely (probability) the result (\(r_{x,y}==x\)) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 0</li>
      <li>population std = ?</li>
      <li>sample size = len(x) + len(y) - 2 (<a href="https://stats.stackexchange.com/questions/270612/why-test-statistic-for-the-pearson-correlation-coefficient-is-frac-r-sqrtn-2">why?</a>)</li>
      <li>sample mean = r</li>
      <li>sample std = \(\sqrt{1-r^2}\) (<a href="https://stats.stackexchange.com/questions/270612/">why?</a>)</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<p>know population std =&gt; T-test</p>

<hr />

<blockquote>
  <p>[<a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.ttest_ind_from_stats.html">Two independent sample mean</a> expl] We are given two sequence a and b which may be sampled from the same one-dimensional random variable. E.g., we get 13 samples in a~[1, 3, 4, 6, 11, 13, 15, 19, 22, 24, 25, 26, 26] and 11 samples in b~[2, 4, 6, 9, 11, 13, 14, 15, 18, 19, 21], can we trust their means are actually the same?</p>
</blockquote>

<p>Here, the accepted fact is “if two sequence are sampled from same random variable, they should have identical mean”, the computed result hypothesizes “These two sequences {a,b} are not from the same random variable, and their mean differenc is \(\Delta\)”, so the null hypothesis is “These two sequences {a,b} are sampled from same random variable”. And we are computing under the null hypothesis, how likely (probability) the result (mean difference is \(\Delta\)) will happen?</p>

<ul>
  <li>Knows:
    <ul>
      <li>pupulation mean = 0 (assume identical mean)</li>
      <li>population std = ?</li>
      <li>sample size = len(x) + len(y) - 2 (<a href="https://en.wikipedia.org/wiki/Student%27s_t-test#Independent_two-sample_t-test">why?</a>)</li>
      <li>sample mean = \(\bar{a} - \bar{b}\)</li>
      <li>sample std is quite complex, check the wikipedia for (<a href="https://en.wikipedia.org/wiki/Student%27s_t-test#Independent_two-sample_t-test">why</a>)</li>
    </ul>
  </li>
  <li>Goal:
    <ul>
      <li>If the sample mean is significant</li>
    </ul>
  </li>
</ul>

<hr />

<p>Now let’s try more and more:</p>

<blockquote>
  <p>[Classification expl] You develop a binary classification model with accuracy 98%, can you trust this accuracy?</p>
</blockquote>

<p>Here, the accepted fact is “if we randomly guess the result, we will have an accuracy 50%”, the reuslt hypothesizes “This is not random guess (the model works)”, so the null hypothesis is “This is still random guess”. And we are computing under the null hypothesis, how likely (probability) the result (accuracy is 90%) will happen?</p>

<hr />

<blockquote>
  <p>[Regression expl] You develop a regression model which has mse (mean squared error) 0.2, can you trust this mse?</p>
</blockquote>

<p>Here, the accepted fact is “if we randomly guess the result, we will have an mse \(err_0\)”, the reuslt hypothesizes “This is not random guess (the model works)”, so the null hypothesis is “This is still random guess”. And we are computing under the null hypothesis, how likely (probability) the result (mse is 0.2) will happen?</p>

<h1 id="conclusion">Conclusion</h1>
<p>We now understand what is null hypothesis and how to state it. And at the end of each example, I also throw out a question, the question is actually what z-test/t-test tries to answer, more generally, <strong>under null hypothesis, how like the result will happen?</strong></p>

<p>I’ll explain more in following posts.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[From here: Hypothesis testing in statistics is a way for you to test the results of a survey or experiment to see if you have meaningful results. You’re basically testing whether your results are valid by figuring out the odds that your results have happened by chance. If your results may have happened by chance, the experiment won’t be repeatable and so has little use.]]></summary></entry><entry><title type="html">How to develop GUI on desktop using JavaFX</title><link href="/blog/2021/how-to-develop-GUI-using-JavaFX/" rel="alternate" type="text/html" title="How to develop GUI on desktop using JavaFX" /><published>2021-12-01T00:00:00+00:00</published><updated>2021-12-01T00:00:00+00:00</updated><id>/blog/2021/how-to-develop-GUI-using-JavaFX</id><content type="html" xml:base="/blog/2021/how-to-develop-GUI-using-JavaFX/"><![CDATA[<p><a href="https://openjfx.io/">JavaFX</a> (API is <a href="https://docs.oracle.com/javase/8/javafx/api/overview-summary.html">here</a>) is used to design GUI on desktop (<a href="https://en.wikipedia.org/wiki/JavaFX">first released</a> in Dec 2008), mobile and embeded systems (Raspberry Pi?). The current long-term-support version is <a href="https://gluonhq.com/products/javafx/">JavaFX17</a> (the one I used). This post is for desktop. Developing softwares are not easy, but they follow certain patterns, knowing the patterns can speed up the development.</p>

<p>JavaFX follows MVC design pattern, which is a design pattern that describes how to build models, views and controllers. The model is the data, the view is the user interface, and the controller is the logic. The model is usually a class, the view is a class (or an FXML file), and the controller is the class that handles the user interaction.</p>

<p><strong>These are all based on my understanding so let me know if there are mistakes and I will fix them.</strong></p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <img class="img-fluid rounded z-depth-1" src="/assets/img/2021-12-01-how-to-develop-GUI-using-JavaFX/2021-12-01-16-14-24.png" data-zoomable="" />
    </div>
</div>

<p>Of course, you also need JAVA installed(at least Java 8). Recent Java SDK already contains JavaFX, but it’s not bad to try latest features in new JavaFX release. My configuration:</p>

<ul>
  <li>MacOS Catalina</li>
  <li>Eclipse 2021-09</li>
  <li>Java 14</li>
  <li>JavaFX 17</li>
</ul>

<h1 id="before-you-start">Before you start</h1>
<ul>
  <li>Install e(fx)clipse from Eclipse Marketplace to speed up the development.</li>
  <li>Download SceneBuilder from <a href="https://gluonhq.com/products/scene-builder/">here</a>. We can use it to design GUI by simply dragging the components instead of writing every line of code. (similar to the <code class="language-plaintext highlighter-rouge">Design</code> view for <code class="language-plaintext highlighter-rouge">*.xml</code> in Android Studio or <code class="language-plaintext highlighter-rouge">Canvas</code> view in Xcode)</li>
  <li>In Eclipse Preferences has one section for JavaFX, you can specify SceneBuilder executable location as well as JavaFX classpath and other options.</li>
</ul>

<h2 id="debugging-using-alert">Debugging using Alert</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Alert</span> <span class="n">alert</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Alert</span><span class="o">(</span><span class="nc">AlertType</span><span class="o">.</span><span class="na">ERROR</span><span class="o">);</span>
<span class="n">alert</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">"Error"</span><span class="o">);</span>
<span class="n">alert</span><span class="o">.</span><span class="na">setHeaderText</span><span class="o">(</span><span class="s">"your header"</span><span class="o">);</span>
<span class="n">alert</span><span class="o">.</span><span class="na">setContentText</span><span class="o">(</span><span class="s">"your content"</span><span class="o">);</span>
<span class="n">alert</span><span class="o">.</span><span class="na">showAndWait</span><span class="o">();</span>
</code></pre></div></div>

<h1 id="all-programs-starts-from-main">All programs starts from Main</h1>
<p>GUI app is not like an app in Terminal. An app in terminal accepts input and prints the output, quite often it only runs once and exits.</p>

<p>GUI app needs to keep the window open and waits for users to interact with it. To keep the window open, GUI apps need to keep an event loop running, think of it as a function which is called repeatedly and quickly to draw the window on screen. This is usually handle by the framework, in JavaFX, it means calling <code class="language-plaintext highlighter-rouge">launch(args)</code> in your main function.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">launch</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>In Android(Android Studio) or iOS(XCode) development, similar function is implicitly called (you may not even see the main function at all).</p>

<h1 id="first-window"><a href="#first-window">First window</a></h1>

<p>JavaFX uses <code class="language-plaintext highlighter-rouge">start()</code> (<code class="language-plaintext highlighter-rouge">onCreate()</code> for Android) to mark the start of the event loop. It is the place where you load your datas and display your startup window. Like other GUI frameworks, JavaFX can load window from configuration file (<code class="language-plaintext highlighter-rouge">*.fxml</code> files for JavaFX), these XML files can also be directly modified using SceneBuilder, after you install e(fx)clipse, just write click on the fxml file and ‘OpenInSceneBuilder’.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">(</span><span class="nc">Stage</span> <span class="n">primaryStage</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// handle data loading locally or remotely</span>
    <span class="c1">// ...</span>

    <span class="c1">// display startup window</span>
    <span class="nc">AnchorPane</span> <span class="n">root</span> <span class="o">=</span> <span class="nc">FXMLLoader</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"startup-window.fxml"</span><span class="o">));</span>
    <span class="c1">// or</span>
    <span class="c1">// Parent root = FXMLLoader.load(getClass().getResource("startup-window.fxml"));</span>
    <span class="c1">// or </span>
    <span class="c1">// FXMLLoader fxmlLoader = new FXMLLoader();</span>
    <span class="c1">// fxmlLoader.setLocation(getClass().getResource("startup-window.fxml"));</span>
    <span class="c1">// AnchorPane root = fxmlLoader.load();</span>

    <span class="c1">// usually a view(i.e., scene/fxml file) is linked with an controller, do stuffs with loginController, e.g. reuse the window</span>
    <span class="nc">LoginController</span> <span class="n">loginController</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">getController</span><span class="o">();</span>
    <span class="n">loginController</span><span class="o">.</span><span class="na">setStage</span><span class="o">(</span><span class="n">primaryStage</span><span class="o">);</span> <span class="c1">// reuse the window</span>
    
    <span class="c1">// show the scene (i.e., content)</span>
    <span class="nc">Scene</span> <span class="n">scene</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">);</span>
    <span class="n">primaryStage</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
    <span class="n">primaryStage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="n">scene</span><span class="o">);</span>
    <span class="n">primaryStage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="procedure">Procedure</h2>
<ul>
  <li>Load root pane from <code class="language-plaintext highlighter-rouge">fxml</code> file.</li>
  <li>Create scene from root pane.</li>
  <li>Set scene to stage and show stage.</li>
</ul>

<h2 id="keys">Keys</h2>
<ul>
  <li>One <code class="language-plaintext highlighter-rouge">fxml</code> to one controller is the easiest way to organize the project.</li>
</ul>

<p>Bonus: do something before quitting the app.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">primaryStage</span><span class="o">.</span><span class="na">setOnCloseRequest</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>
    <span class="c1">// handle data saving locally or remotely</span>
    <span class="c1">// ...</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
<span class="o">});</span>
</code></pre></div></div>

<h1 id="transitions-to-other-windows">Transitions to other windows</h1>
<p>A stage corresponds to one window, so whenever you create a new stage, a new window will open. You can also reuse the same stage by passing it to other controllers, see <a href="#first-window">First Window</a>.</p>

<ul>
  <li>Stage: a window</li>
  <li>Scene: the content in the window</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Step 1. acquire the stage</span>
<span class="c1">// create new stage</span>
<span class="nc">Stage</span> <span class="n">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stage</span><span class="o">();</span>
<span class="c1">// or use current stage, see [First Window] section</span>

<span class="c1">// Step 2. transit</span>
<span class="nc">XMLLoader</span> <span class="n">fxmlLoader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FXMLLoader</span><span class="o">();</span>
<span class="n">fxmlLoader</span><span class="o">.</span><span class="na">setLocation</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"startup-window.fxml"</span><span class="o">));</span>
<span class="nc">AnchorPane</span> <span class="n">root</span> <span class="o">=</span> <span class="n">fxmlLoader</span><span class="o">.</span><span class="na">load</span><span class="o">();</span>
<span class="n">stage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">));</span>
<span class="n">stage</span><span class="o">.</span><span class="na">setResizable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
<span class="n">stage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</code></pre></div></div>

<h1 id="common-layouts-and-controls">Common Layouts and Controls</h1>
<p>Design your own layout using SceneBuilder is easy and fast, however, there are two special layout that usually need extra care, they are so common such that every UI framework has built-in layouts for them with high performance:</p>
<ul>
  <li>Table View (One example is ListView in JavaFX)</li>
  <li>Tile View (TileView in JavaFX)</li>
</ul>

<p>To combine them together with other self-designed layouts:</p>
<ul>
  <li>Tab View (TabView in JavaFX)</li>
  <li>AnchorPane</li>
  <li>SplitPane</li>
  <li>GridPane</li>
  <li>Accordion (which allows to expand and collapse panes)</li>
  <li>Group</li>
  <li>Region</li>
  <li>Canvas</li>
  <li>Scene</li>
  <li>…</li>
</ul>

<p>And a program usually uses only a few kind of controls, there are otheres, but usually it’s just some similar things based on these:</p>
<ul>
  <li>Button</li>
  <li>Label</li>
  <li>Checkbox</li>
  <li>DataPicker</li>
  <li>ProgressBar</li>
  <li>TextField or TextArea (depends on whether you need input one line or mutiple lines)</li>
  <li>ImageView</li>
  <li>VideoView</li>
  <li>WebView</li>
</ul>

<p>These standard things are defined in every UI framework, in JavaFX is would be <a href="https://docs.oracle.com/javase/8/javafx/api/javafx/scene/layout/package-summary.html">javafx.scene.layout</a> and <a href="https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/package-summary.html">javafx.scene.control</a>.</p>

<h2 id="listview-one-table-view-in-javafx">ListView (one table view in JavaFX)</h2>
<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <img class="img-fluid rounded z-depth-1" src="/assets/img/2021-12-01-how-to-develop-GUI-using-JavaFX/2021-12-10-11-58-02.png" data-zoomable="" width="500" />
    </div>
</div>
<p>ListView let you display a list of items.</p>
<ol>
  <li>Add a ListView control <code class="language-plaintext highlighter-rouge">listView</code> in your FXML file (e.g. use SceneBuilder).</li>
  <li>Add <code class="language-plaintext highlighter-rouge">fx:id</code> to the ListView.</li>
  <li>In the controller class:</li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Assume User class is defined</span>
<span class="c1">// Get data (local/remote) and save it into an `ObservableList&lt;Object&gt; list`.</span>
<span class="n">userList</span> <span class="o">=</span> <span class="n">get_data</span><span class="o">();</span> <span class="c1">// ObservableList&lt;User&gt;</span>

<span class="c1">// set content of each row</span>
<span class="n">listView</span><span class="o">.</span><span class="na">setItems</span><span class="o">(</span><span class="n">userList</span><span class="o">);</span> <span class="c1">//set items</span>
<span class="c1">// find exactly which string to show for the item</span>
<span class="n">userList</span><span class="o">.</span><span class="na">setCellFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">Callback</span><span class="o">&lt;</span><span class="nc">ListView</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;,</span> <span class="nc">ListCell</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;&gt;()</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ListCell</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">call</span><span class="o">(</span><span class="nc">ListView</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">userListView</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">ListCell</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">updateItem</span><span class="o">(</span><span class="nc">User</span> <span class="n">item</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">empty</span><span class="o">)</span> <span class="o">{</span>
                <span class="kd">super</span><span class="o">.</span><span class="na">updateItem</span><span class="o">(</span><span class="n">item</span><span class="o">,</span> <span class="n">empty</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">item</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">setText</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getUserName</span><span class="o">());</span> <span class="c1">// find the property in User class to show</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">setText</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">};</span>
    <span class="o">}</span>
<span class="o">});</span>
<span class="n">listView</span><span class="o">.</span><span class="na">getSelectionModel</span><span class="o">().</span><span class="na">select</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span> <span class="c1">// select the first item</span>

<span class="c1">// click one row</span>
<span class="n">userList</span><span class="o">.</span><span class="na">getSelectionModel</span><span class="o">().</span><span class="na">selectedItemProperty</span><span class="o">().</span><span class="na">addListener</span><span class="o">(</span>
    <span class="o">(</span><span class="n">observable</span><span class="o">,</span> <span class="n">value1</span><span class="o">,</span> <span class="n">value2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">value2</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">userName</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">value2</span><span class="o">.</span><span class="na">getUserName</span><span class="o">());</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">userName</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">);</span>

<span class="c1">// get selected item</span>
<span class="nc">User</span> <span class="n">selectedUser</span> <span class="o">=</span> <span class="n">listView</span><span class="o">.</span><span class="na">getSelectionModel</span><span class="o">().</span><span class="na">getSelectedItem</span><span class="o">();</span>
</code></pre></div></div>
<h2 id="tilepane">TilePane</h2>
<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <img class="img-fluid rounded z-depth-1" src="/assets/img/2021-12-01-how-to-develop-GUI-using-JavaFX/2021-12-10-11-38-00.png" data-zoomable="" width="500" />
    </div>
</div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Assume a TilePane is created as tilePane</span>
<span class="nd">@FXML</span> <span class="nc">TilePane</span> <span class="n">tilePane</span><span class="o">;</span>
<span class="nc">List</span><span class="o">&lt;</span><span class="nc">Model</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Model</span><span class="o">&gt;();</span>
<span class="nc">List</span><span class="o">&lt;</span><span class="nc">ViewController</span><span class="o">&gt;</span> <span class="n">controllers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ViewController</span><span class="o">&gt;;</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">refresh</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">tilePane</span><span class="o">.</span><span class="na">getChildren</span><span class="o">().</span><span class="na">clear</span><span class="o">();</span>
    <span class="c1">// get data</span>
    <span class="n">list</span> <span class="o">=</span> <span class="n">reload_data</span><span class="o">();</span>
    <span class="c1">// show data</span>
    <span class="k">for</span> <span class="o">(</span><span class="nc">Model</span> <span class="nl">model:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// load view for the object</span>
        <span class="n">oneTileView</span> <span class="o">=</span> <span class="n">load_view</span><span class="o">();</span> <span class="c1">// from FXML file as shown before is one way</span>
        
        <span class="nc">ViewController</span> <span class="n">oneTileViewController</span> <span class="o">=</span> <span class="n">load_controller</span><span class="o">();</span>
        <span class="n">oneTileViewController</span><span class="o">.</span><span class="na">setModel</span><span class="o">(</span><span class="n">model</span><span class="o">);</span>
        <span class="n">controllers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">oneTileViewController</span><span class="o">);</span>

        <span class="c1">// add click event for each tile</span>
        <span class="n">oneTileView</span><span class="o">.</span><span class="na">setOnMouseClicked</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">select</span><span class="o">(</span><span class="n">oneTileViewController</span><span class="o">));</span>

        <span class="n">tilePane</span><span class="o">.</span><span class="na">getChildren</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">oneTileView</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">select</span><span class="o">(</span><span class="nc">ViewController</span> <span class="n">ctrl</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// do something</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="tabview">TabView</h2>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <img class="img-fluid rounded z-depth-1" src="/assets/img/2021-12-01-how-to-develop-GUI-using-JavaFX/2021-12-10-11-56-29.png" data-zoomable="" width="500" />
    </div>
</div>

<h1 id="to-be-continued">To be continued…</h1>]]></content><author><name></name></author><summary type="html"><![CDATA[JavaFX (API is here) is used to design GUI on desktop (first released in Dec 2008), mobile and embeded systems (Raspberry Pi?). The current long-term-support version is JavaFX17 (the one I used). This post is for desktop. Developing softwares are not easy, but they follow certain patterns, knowing the patterns can speed up the development.]]></summary></entry><entry><title type="html">Evolution of StyleGAN</title><link href="/blog/2021/evolution-of-stylegan/" rel="alternate" type="text/html" title="Evolution of StyleGAN" /><published>2021-10-30T00:00:00+00:00</published><updated>2021-10-30T00:00:00+00:00</updated><id>/blog/2021/evolution-of-stylegan</id><content type="html" xml:base="/blog/2021/evolution-of-stylegan/"><![CDATA[<h1 id="still-working-on-it">Still Working on it</h1>

<p>StyleGANs<d-cite key="karras2019style, karras2020analyzing, karras2021alias"></d-cite> are a series of generative models that generate high-quality images from a latent space (e.g. random noise).</p>

<h1 id="evolution">Evolution</h1>

<h2 id="progressivegan">ProgressiveGAN<d-cite key="karras2017progressive"></d-cite></h2>
<p><img src="/assets/img/2021-10-30-evolution-of-stylegan/2021-11-12-19-23-01.png" alt="" />.</p>

<h3 id="progressive-growing">Progressive Growing</h3>
<blockquote>
  <p>Generate better low-resolution images, then growing to high-resolution.</p>
</blockquote>

<p><img src="/assets/img/2021-10-30-evolution-of-stylegan/2021-11-13-14-17-38.png" alt="" /></p>

<p>G and D are only defined once. But in each G has several <code class="language-plaintext highlighter-rouge">to_rgb</code> layers, which are used to generate images at different resolutions. After training, only the last <code class="language-plaintext highlighter-rouge">to_rgb</code> layer is used to generate the image at high resolution. The layers related to smaller resolution are trained first, and then fine-tuned together with the layers related to larger resolution.</p>

<h3 id="minibatch-standard-deviation">Minibatch Standard Deviation</h3>
<blockquote>
  <p>Encouraging the minibatches of generated and training images to show similar statistics.</p>
</blockquote>

<p>From <a href="https://github.com/NVlabs/stylegan2-ada-pytorch/blob/6f160b3d22b8b178ebe533a50d4d5e63aedba21d/training/networks.py#L589">official code</a>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MinibatchStdLayer</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">group_size</span><span class="p">,</span> <span class="n">num_channels</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">group_size</span> <span class="o">=</span> <span class="n">group_size</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">num_channels</span> <span class="o">=</span> <span class="n">num_channels</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">N</span><span class="p">,</span> <span class="n">C</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">W</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">shape</span>
        <span class="k">with</span> <span class="n">misc</span><span class="p">.</span><span class="n">suppress_tracer_warnings</span><span class="p">():</span> <span class="c1"># as_tensor results are registered as constants
</span>            <span class="n">G</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nb">min</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">as_tensor</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">group_size</span><span class="p">),</span> <span class="n">torch</span><span class="p">.</span><span class="n">as_tensor</span><span class="p">(</span><span class="n">N</span><span class="p">))</span> <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">group_size</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="k">else</span> <span class="n">N</span>
        <span class="n">F</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_channels</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">C</span> <span class="o">//</span> <span class="n">F</span>

        <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">G</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">W</span><span class="p">)</span>    <span class="c1"># [GnFcHW] Split minibatch N into n groups of size G, and channels C into F groups of size c.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="n">y</span> <span class="o">-</span> <span class="n">y</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>               <span class="c1"># [GnFcHW] Subtract mean over group.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">square</span><span class="p">().</span><span class="n">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>          <span class="c1"># [nFcHW]  Calc variance over group.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">y</span> <span class="o">+</span> <span class="mf">1e-8</span><span class="p">).</span><span class="n">sqrt</span><span class="p">()</span>               <span class="c1"># [nFcHW]  Calc stddev over group.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>             <span class="c1"># [nF]     Take average over channels and pixels.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>          <span class="c1"># [nF11]   Add missing dimensions.
</span>        <span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">repeat</span><span class="p">(</span><span class="n">G</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">W</span><span class="p">)</span>            <span class="c1"># [NFHW]   Replicate over group and pixels.
</span>        <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">([</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">],</span> <span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>        <span class="c1"># [NCHW]   Append to input as new channels.
</span>        <span class="k">return</span> <span class="n">x</span>
</code></pre></div></div>

<p>Basically, it generates an additional channel with the variance of all input images of size [CHW] and append it to the input.</p>

<h2 id="stylegan">StyleGAN<d-cite key="karras2019style"></d-cite></h2>

<h2 id="stylegan2">StyleGAN2<d-cite key="karras2020analyzing"></d-cite></h2>

<h2 id="stylegan2-ada">StyleGAN2-ada<d-cite key="karras2020training"></d-cite></h2>

<h2 id="stylegan3">StyleGAN3<d-cite key="karras2021alias"></d-cite></h2>

<h1 id="project-to-latent-space">Project to latent space</h1>
<p>It involves project a real images to the latent space of StyleGAN, which is a preliminary to <a href="#munipulate-image">munipulate image</a>.</p>

<h2 id="stylegan2-projector">StyleGAN2 projector<d-cite key="karras2020analyzing"></d-cite></h2>

<h2 id="e2e-projector">e2e projector<d-cite key="tov2021designing"></d-cite></h2>

<h1 id="control-image">Control Image</h1>
<p>It involves control certain attribute of an image by first map the image into the latent space of StyleGAN, then move the latent space towards the targeting direction.</p>

<h2 id="ganspace">GANSpace<d-cite key="harkonen2020ganspace"></d-cite></h2>

<h2 id="gancontrol">GANControl<d-cite key="shoshan2021gan"></d-cite></h2>

<h2 id="mpg2">MPG2<d-cite key="han2021multi"></d-cite></h2>

<h2 id="sefa">SeFa<d-cite key="shen2021closed"></d-cite></h2>

<h2 id="interfacegan">InterFaceGAN<d-cite key="shen2020interfacegan"></d-cite></h2>

<h2 id="stylespace">StyleSpace<d-cite key="wu2021stylespace"></d-cite></h2>

<h2 id="styleclip">StyleClip<d-cite key="patashnik2021styleclip"></d-cite></h2>
<p><img src="/assets/img//2021-10-30-evolution-of-stylegan/2021-11-10-08-45-13.png" alt="" /></p>

<h3 id="latent-optimization">Latent Optimization</h3>
<p><img src="/assets/img/2021-10-30-evolution-of-stylegan/2021-11-10-00-20-09.png" alt="" /></p>

<h3 id="latent-mapper">Latent Mapper</h3>

<h2 id="stylegan-of-all-trades">StyleGAN of All Trades<d-cite key="chong2021stylegan"></d-cite></h2>

<p>https://github.com/mchong6/SOAT</p>

<p>https://mp.weixin.qq.com/s/2G9JAWmXig0o8WR1J7dfkg</p>]]></content><author><name>Fangda Han</name></author><summary type="html"><![CDATA[How StyleGAN is gradually evolving up to the current version.]]></summary></entry><entry><title type="html">2021-09 Collection</title><link href="/blog/2021/collections/" rel="alternate" type="text/html" title="2021-09 Collection" /><published>2021-09-30T00:00:00+00:00</published><updated>2021-09-30T00:00:00+00:00</updated><id>/blog/2021/collections</id><content type="html" xml:base="/blog/2021/collections/"><![CDATA[<ul>
  <li><a href="https://karpathy.github.io/2021/06/21/blockchain/">A from-scratch tour of Bitcoin in Python</a></li>
</ul>

<h2 id="chinese">Chinese</h2>

<ul>
  <li><a href="https://www.zhihu.com/column/c_1260183218026213376">Transformer日积月累</a></li>
</ul>]]></content><author><name>Fangda Han</name></author><summary type="html"><![CDATA[Monthly collection.]]></summary></entry><entry><title type="html">职场上的小技巧</title><link href="/blog/2021/rules-in-work/" rel="alternate" type="text/html" title="职场上的小技巧" /><published>2021-09-28T00:00:00+00:00</published><updated>2021-09-28T00:00:00+00:00</updated><id>/blog/2021/rules-in-work</id><content type="html" xml:base="/blog/2021/rules-in-work/"><![CDATA[<ul>
  <li>发通知的时候，最好在标题里就把通知内容的具体事、人写出来<d-cite key="得到头条"></d-cite>。</li>
  <li>执行力强=主动挖掘+反述行动<d-cite key="得到头条"></d-cite>。</li>
</ul>

<blockquote>
  <p>主动挖掘是你接到命令后，要这么回答：“好的领导，不过我想问下，访客一共几位呀？是开车过来的吗？需要我给他们安排伴手礼吗？对方有助理对接吗？还有，还需要我协调其他人参加这个会议吗？”</p>
</blockquote>

<blockquote>
  <p>你可能会想，老板没说这么多啊，我用这样追着问吗？对，恭喜你，发现了一个职场真相，就是：绝大部分你从上级那里拿到的指令，都是被简化后的指令。这些信息在上级的大脑里已经被自动处理过了，往往不会详细交代。如果你不主动挖掘，等二十几个客人到了，可你订的会议室只能坐十几个人，你就准备好迎接老板的白眼吧。</p>
</blockquote>

<blockquote>
  <p>上面做的就叫主动挖掘。接着还有下一步：反述行动。根据老板的答案，你得翻译成自己接下来要做的行动，比如：“好的领导，我现在马上订一个20人的会议室，因为是重要客人，我会准备好咖啡果盘，预约1个停车位，伴手礼就用公司的周边杯子了，您看可以吗？”</p>
</blockquote>

<blockquote>
  <p>当你翻译成行动的时候，老板可能才会想起来告诉你：“哦，别点咖啡，他们喜欢喝茶。”你看，什么叫执行力强？不是军令如山倒，老板说啥我做啥。而是老板只有一个目标，而我端回了整个方案。</p>
</blockquote>]]></content><author><name>韩放达</name></author><summary type="html"><![CDATA[一些收集到的职场小技巧]]></summary></entry><entry><title type="html">Make wandb ignore files for a project</title><link href="/blog/2021/Make-WandB-ignore-files/" rel="alternate" type="text/html" title="Make wandb ignore files for a project" /><published>2021-09-24T00:00:00+00:00</published><updated>2021-09-24T00:00:00+00:00</updated><id>/blog/2021/Make-WandB-ignore-files</id><content type="html" xml:base="/blog/2021/Make-WandB-ignore-files/"><![CDATA[<h2 id="what-is-wandb">What is WandB</h2>

<p><a href="https://wandb.ai/">WandB</a> is a handy tool to visualize training process as well as cross-validate hyper-parameters. One thing wandb do is it automatically uploads all files in <code class="language-plaintext highlighter-rouge">wandb.run.dir</code>. However you only get <a href="https://wandb.ai/subscriptions">100GB</a> for free, and when you save a lot of checkpoints, videos, images, it’s easily become full.</p>

<p>While I know we can just create another folder to save our large files, but I kind of like how wandb name each run, so I still prefer saving to <code class="language-plaintext highlighter-rouge">wandb.run.dir</code>. (and sometimes it took too long to upload all files…)</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <img class="img-fluid rounded z-depth-1" src="/assets/img/wandb-run-dir.jpg" data-zoomable="" />
    </div>
</div>

<p>The official doc very briefly talked about how to ignore files for your project, but there is not demo files, I did some research in their source code, and found the steps.</p>

<ol>
  <li>Create a file named <code class="language-plaintext highlighter-rouge">setting</code> in <code class="language-plaintext highlighter-rouge">wandb/</code></li>
  <li>Edit <code class="language-plaintext highlighter-rouge">setting</code>, both lines has to be exactly like this and for globs, each file should be comma separated, no extra space in between. e.g.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[default]
ignore_globs=*.npy,*pt 
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Make wandb ignore files for a project]]></summary></entry><entry><title type="html">Use screen to keep sessions alive when you leave</title><link href="/blog/2021/how-to-use-screen/" rel="alternate" type="text/html" title="Use screen to keep sessions alive when you leave" /><published>2021-09-24T00:00:00+00:00</published><updated>2021-09-24T00:00:00+00:00</updated><id>/blog/2021/how-to-use-screen</id><content type="html" xml:base="/blog/2021/how-to-use-screen/"><![CDATA[<h2 id="what-is-screen">What is screen</h2>

<p><code class="language-plaintext highlighter-rouge">screen</code> is a Linux tool to create seesions in your terminal, these sessions will remain alive even when you close your terminal, which happens quite often when running deep learning models on remote clusters.</p>

<h2 id="common-usages">Common usages</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">screen -ls</code> lists all sessions</li>
  <li><code class="language-plaintext highlighter-rouge">screen -S your-session-name</code> creates a new session</li>
  <li><code class="language-plaintext highlighter-rouge">screen -r your-session-name</code> attach an existing session, you can just type in the first few letters</li>
  <li><code class="language-plaintext highlighter-rouge">screen -X -S your-session-name quit</code> kill an existing session</li>
</ul>

<p>I like shortcuts, I create a few and put them in <code class="language-plaintext highlighter-rouge">~/.bashrc</code>, so I dou’t need to input these long commands</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">sls</span><span class="o">=</span><span class="s1">'screen -ls'</span>
<span class="nb">alias </span><span class="nv">sr</span><span class="o">=</span><span class="s1">'screen -r'</span>
<span class="nb">alias </span><span class="nv">sS</span><span class="o">=</span><span class="s1">'screen -S'</span>
<span class="nb">alias </span><span class="nv">ns</span><span class="o">=</span><span class="s1">'nvidia-smi'</span> <span class="c"># extra bonus</span>
<span class="k">function </span>sk<span class="o">()</span> <span class="o">{</span>
  <span class="nv">var</span><span class="o">=</span><span class="si">$(</span>screen <span class="nt">-ls</span> <span class="nv">$1</span>|awk <span class="s1">'NR==2 {print $1}'</span><span class="si">)</span>
  <span class="nb">echo</span> <span class="s1">'trying to kill'</span> <span class="nv">$var</span>
  screen <span class="nt">-X</span> <span class="nt">-S</span> <span class="nv">$1</span> quit
<span class="o">}</span>
</code></pre></div></div>

<p>When you are inside a screen session:</p>

<ul>
  <li>press <code class="language-plaintext highlighter-rouge">control + A</code>, release then press <code class="language-plaintext highlighter-rouge">D</code> to detach the current session</li>
  <li>press <code class="language-plaintext highlighter-rouge">control + D</code>, quit the current session</li>
  <li>press <code class="language-plaintext highlighter-rouge">control + A</code>, release then type <code class="language-plaintext highlighter-rouge">:sessionname new-session-name</code> to rename the current session.</li>
</ul>

<h2 id="defects">Defects</h2>

<ul>
  <li>Sometimes I forget whether I’m in a session or which session I’m in, but I could not find a way to always show the current session name.</li>
</ul>

<h2 id="qa">Q&amp;A</h2>

<ul>
  <li><a href="https://kb.iu.edu/d/ahrm">can’t re-attach to your screen session after a lost connection</a></li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Use screen to keep the training going on]]></summary></entry></feed>